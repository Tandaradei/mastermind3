/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package help;

import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author laurin.agostini
 */
public class HelpWindow extends javax.swing.JFrame {

    /**
     * Creates new form HelpPage
     */
    public HelpWindow() {
        initComponents();
        readFile();
    }
    
    private void readFile(){
        try (BufferedReader br = new BufferedReader(new FileReader("src/help.html"))) {
            String result = "";
            String line;
            while((line = br.readLine()) != null){
                result += line;
            }
            jTextPane1.setText(result);

        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Help - Mastermind");

        jTextPane1.setEditable(false);
        jTextPane1.setContentType("text/html"); // NOI18N
        jTextPane1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextPane1.setText( "<h2>Spielprinzip</h2> " +
                            "<p align=\"justify\">" +
                            "Der Server legt zu Beginn einen variablen (Voreinstellung: 4) Farbcode fest, " +
                            "der aus 2 bis 15 Farben (Voreinstellung: 6) ausgewählt wird. Eine Farbe kann " +
                            "auch mehrmals verwendet werden. Der Spieler versucht nun diesen Code zu erraten. " +
                            "Beim ersten Versuch wird der Farbcode von dem Spieler zufällig gewählt und blind geraten, " +
                            "die weiteren Züge geschehen dann mit Hilfe der Antworten aus den vorhergegangenen Zügen.	" +
                            "</p>" +
                            "<p align=\"justify\">" +
                            "Nach jedem Zug bekommt der Spieler eine Antwort, wie viele Stellen der Farbkombination er " +
                            "in Farbe und Position richtig gesetzt hat (Schwarzer Pin) und wie viele Teile der Farbkombination " +
                            "zwar die richtige Farbe haben, aber an einer falschen Position stehen (Weißer Pin). " +
                            "Alle Rateversuche und Antworten bleiben bis zum Ende des Spiels sichtbar." +
                            "</p>" +
                            "<p align=\"justify\">" +
                            "Ziel des Spielers ist es, die Farbkombination mit möglichst wenigen Versuchen zu erraten." +
                            "</p>" +
                            "<p align=\"justify\">" +
                            "Nach dem Start des Programmes hat der Nutzer die Wahl einen Server zu erstellen " +
                            "oder sich mit einem Server zu verbinden. Über die Reiter gelangt er jeweils zu den nötigen Einstellungen " +
                            "(Der Reiter „Join“ steht für den Client und der Reiter „Host“ steht für den Server)." +
                            "</p>" );
        jScrollPane1.setViewportView(jTextPane1);

        jMenu1.setText("Exit");
        jMenu1.setToolTipText("Exit the help page");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuExitClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuExitClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuExitClicked
       this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuExitClicked

    /**
     * 
     */
    /*public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HelpWindow().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
